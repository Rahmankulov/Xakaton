// <auto-generated />
using System;
using BlazorApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlazorApp.Migrations
{
    [DbContext(typeof(AgroContext))]
    [Migration("20241207072112_InitAgro")]
    partial class InitAgro
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BlazorApp.Database.AgroContext+Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(3);

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+Field", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FieldId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FieldId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+LocationHistory", b =>
                {
                    b.Property<int>("LocationHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LocationHistoryId"));

                    b.Property<string>("ChangeDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TreeLocationId")
                        .HasColumnType("integer");

                    b.HasKey("LocationHistoryId");

                    b.HasIndex("TreeLocationId");

                    b.ToTable("LocationHistories");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("TreeId")
                        .HasColumnType("integer");

                    b.HasKey("TaskId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TreeId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+Tree", b =>
                {
                    b.Property<int>("TreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TreeId"));

                    b.Property<DateTime>("PlantedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TreeLocationId")
                        .HasColumnType("integer");

                    b.HasKey("TreeId");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+TreeBlock", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BlockId"));

                    b.Property<int>("FieldId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BlockId");

                    b.HasIndex("FieldId");

                    b.ToTable("TreeBlocks");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+TreeHistory", b =>
                {
                    b.Property<int>("TreeHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TreeHistoryId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TreeId")
                        .HasColumnType("integer");

                    b.HasKey("TreeHistoryId");

                    b.HasIndex("TreeId");

                    b.ToTable("TreeHistories");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+TreeLocation", b =>
                {
                    b.Property<int>("TreeLocationId")
                        .HasColumnType("integer");

                    b.Property<int>("BlockId")
                        .HasColumnType("integer");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("TreeLocationId");

                    b.HasIndex("BlockId");

                    b.HasIndex("Latitude", "Longitude")
                        .IsUnique();

                    b.ToTable("TreeLocations");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+LocationHistory", b =>
                {
                    b.HasOne("BlazorApp.Database.AgroContext+TreeLocation", "TreeLocation")
                        .WithMany("History")
                        .HasForeignKey("TreeLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeLocation");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+Task", b =>
                {
                    b.HasOne("BlazorApp.Database.AgroContext+Employee", "Employee")
                        .WithMany("Tasks")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("BlazorApp.Database.AgroContext+Tree", "Tree")
                        .WithMany()
                        .HasForeignKey("TreeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+TreeBlock", b =>
                {
                    b.HasOne("BlazorApp.Database.AgroContext+Field", "Field")
                        .WithMany("Blocks")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+TreeHistory", b =>
                {
                    b.HasOne("BlazorApp.Database.AgroContext+Tree", "Tree")
                        .WithMany("History")
                        .HasForeignKey("TreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+TreeLocation", b =>
                {
                    b.HasOne("BlazorApp.Database.AgroContext+TreeBlock", "Block")
                        .WithMany("TreeLocations")
                        .HasForeignKey("BlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp.Database.AgroContext+Tree", "Tree")
                        .WithOne("TreeLocation")
                        .HasForeignKey("BlazorApp.Database.AgroContext+TreeLocation", "TreeLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Block");

                    b.Navigation("Tree");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+Employee", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+Field", b =>
                {
                    b.Navigation("Blocks");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+Tree", b =>
                {
                    b.Navigation("History");

                    b.Navigation("TreeLocation")
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+TreeBlock", b =>
                {
                    b.Navigation("TreeLocations");
                });

            modelBuilder.Entity("BlazorApp.Database.AgroContext+TreeLocation", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
